<?php

/**
 * @package    d4os_io_groups
 * @copyright Copyright (C) 2010-2012 Wene - ssm2017 Binder ( S.Massiaux ). All rights reserved.
 * @link      http://www.d4os.org
 * @license   GNU/GPL, http://www.gnu.org/licenses/gpl-2.0.html
 * D4os is free software. This version may have been modified pursuant
 * to the GNU General Public License, and as distributed it includes or
 * is derivative of works licensed under the GNU General Public License or
 * other free or open source software licenses.
 */

/**
 * Implementation of hook help
 */
function d4os_io_groups_help($path, $arg) {
  switch ($path) {
    case 'admin/help#d4os_io_groups':
      return '<p>' . t('OpenSim grid groups management') . '</p>';
  }
}

function d4os_io_groups_menu() {

  $items['admin/config/d4os/io/groups'] = array(
    'title' => 'Groups',
    'description' => 'd4os io groups settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('d4os_io_groups_admin'),
    'access arguments' => array('admin d4os io groups'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'd4os_io_groups.admin.inc'
  );
  return $items;
}

function d4os_io_groups_permission() {
  return array(
    'admin d4os io groups' => array(
      'title' => t('Admin d4os io groups'),
      'description' => t('Admin d4os io groups.'),
    ),
  );
}

function d4os_io_groups_user_delete($account) {
  // get the user uuid
  $uuid = db_query("SELECT UUID FROM {d4os_ui_users} WHERE uid=:uid", array(':uid' => $account->uid))->fetchField();
  if ($uuid) {
    $d4os_groups = D4OS_IO::create('Groups');
    $d4os_groups->delete_user($uuid);
  }
}

function d4os_io_groups_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'd4os_ui_users_grid_registration_form') {
    $default_group = variable_get('d4os_io_groups_default_group', UUID_ZERO);
    if ($default_group != UUID_ZERO) {
      $form['goups'] = array(
        '#type' => 'fieldset',
        '#title' => t('Groups'),
        '#collapsible' => FALSE,
        '#collapsed' => FALSE,
      );
      $form['goups']['add_to_default_group'] = array(
        '#type' => 'checkbox',
        '#title' => t('Register to default group'),
        '#description' => t('Select if you would like to be registered in the default group.'),
        '#default_value' => 1,
      );
      $form['#submit'][] = 'd4os_io_groups_grid_registration_fom_submit';
    }
  }
}

function d4os_io_groups_grid_registration_fom_submit($form, &$form_state) {
  if ($form_state['values']['add_to_default_group'] == 1) {
    // check if the user is registered
    $uuid = db_query("SELECT UUID FROM {d4os_ui_users} WHERE uid=:uid", array(':uid' => arg(1)))->fetchField();
    // assign the role
    if ($uuid) {
      $default_group = variable_get('d4os_io_groups_default_group', UUID_ZERO);
      $d4os_groups = D4OS_IO::create('Groups');
      $d4os_groups->add_user_to_group($uuid, $default_group);
    }
  }
}

/**
 *  Implements hook_user_update().
 */
function d4os_io_groups_add_user_to_group($uuid) {
  $default_group = variable_get('d4os_io_groups_default_group', UUID_ZERO);
  if (!empty($default_group) && $default_group != UUID_ZERO) {
    $d4os_groups = D4OS_IO::create('Groups');
    $d4os_groups->add_user_to_group($uuid, $default_group);
  }
}
