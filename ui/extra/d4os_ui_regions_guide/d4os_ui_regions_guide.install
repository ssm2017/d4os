<?php

/**
 * Implements hook_install
 */
function d4os_ui_regions_guide_install() {
  $t = get_t();

  // defines node type for the guide
  $machine_name = 'd4os_ui_regions_guide';
  $defaults = array(
    'type' => $machine_name,
    'name' => 'Regions guide',
    'base' => 'node_content',
    'title_label' => $t('Name of the region'),
    'description' => $t('Regions guide to be able to browse selected regions.'),
    'custom' => TRUE,
  );

  // set other node defaults not declared above
  $content_type = node_type_set_defaults($defaults);

  // save the content type
  node_type_save($content_type);

  // add peristant variables that control settings
  variable_set('additional_settings__active_tab_' . $machine_name, 'edit-menu');
  variable_set('node_preview_' . $machine_name, 1);
  variable_set('node_options_' . $machine_name, array(0 => 'status'));
  variable_set('node_submitted_' . $machine_name, 0);
  variable_set('menu_options_' . $machine_name, array());
  variable_set('menu_parent_' . $machine_name, 'main-menu:0');

  // create all the fields we are adding to our content type
  foreach (_d4os_ui_regions_guide_installed_fields() as $field) {
    field_create_field($field);
  }

  // create all the instances for our fields
  foreach (_d4os_ui_regions_guide_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = $defaults['type'];
    field_create_instance($instance);
  }
}

function _d4os_ui_regions_guide_installed_fields() {
  $t = get_t();
  return array(
    // description
    'drg_description' => array(
      'field_name' => 'field_drg_description',
      'type' => 'text',
      'module' => 'text',
      'active' => 1,
      'locked' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'settings' => array(
        'max_length' => 255
      )
    ),
    // categories
    'drg_categories' => array(
      'field_name'  => 'field_drg_categories',
      'type'        => 'list_integer',
      'module'      => 'list',
      'active'      => 1,
      'locked'      => 1,
      'cardinality' => -1,
      'deleted'     => 0,
      'settings'    => array(
        'allowed_values' => array(
          '1' => $t('Official location'),
          '3' => $t('Arts and culture'),
          '4' => $t('Business'),
          '5' => $t('Educationnal'),
          '6' => $t('Gaming'),
          '7' => $t('Hangout'),
          '8' => $t('Newcomer friendly'),
          '9' => $t('Parks and Nature'),
          '10' => $t('Residential'),
          '11' => $t('Shopping'),
          '13' => $t('Other'),
          '14' => $t('Rental'),
        ),
      ),
    ),
    // region uuid
    'drg_region_uuid' => array(
      'field_name' => 'field_drg_region_uuid',
      'type' => 'uuid_field',
      'module' => 'uuid_field',
      'active' => 1,
      'locked' => 1,
      'cardinality' => 1,
      'deleted' => 0,
    ),
    // snapshot uuid
    'drg_snapshot_uuid' => array(
      'field_name' => 'field_drg_snapshot_uuid',
      'type' => 'uuid_field',
      'module' => 'uuid_field',
      'active' => 1,
      'locked' => 1,
      'cardinality' => 1,
      'deleted' => 0,
    ),
    // landing point
    'drg_landing_point' => array(
      'field_name' => 'field_drg_landing_point',
      'type' => 'text',
      'module' => 'text',
      'active' => 1,
      'locked' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'settings' => array(
        'max_length' => 13
      )
    ),
    // landing rotation
    'drg_landing_rotation' => array(
      'field_name' => 'field_drg_landing_rotation',
      'type' => 'text',
      'module' => 'text',
      'active' => 1,
      'locked' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'settings' => array(
        'max_length' => 13
      )
    )
  );
}

function _d4os_ui_regions_guide_installed_instances() {
  $t = get_t();
  return array(
    // description
    'drg_description' => array(
      'field_name' => 'field_drg_description',
      'label' => $t('Description'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'text_textfield',
        'module' => 'text',
        'settings' => array(
          'size' => 60
        )
      )
    ),
    // categories
    'drg_categories' => array(
      'field_name'  => 'field_drg_categories',
      'label'       => $t('Category'),
      'required'    => TRUE,
      'widget' => array(
        'type'     => 'options_buttons',
        'module'   => 'options',
      )
    ),
    // region uuid
    'drg_region_uuid' => array(
      'field_name' => 'field_drg_region_uuid',
      'label' => $t('Region uuid'),
      'required' => TRUE
    ),
    // snapshot uuid
    'drg_snapshot_uuid' => array(
      'field_name' => 'field_drg_snapshot_uuid',
      'label' => $t('Snapshot uuid'),
      'description' => $t('Recommended : 512x512, 63Ko, jpg'),
      'required' => TRUE
    ),
    // landing point
    'drg_landing_point' => array(
      'field_name' => 'field_drg_landing_point',
      'label' => $t('Landing point'),
      'description' => $t('Example : <127,127,127>'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'text_textfield',
        'module' => 'text',
        'settings' => array(
          'size' => 13,
          'max_length' => 13
        )
      ),
      'default_value' => array(
        array(
          'value' => '<127,127,127>'
        )
      )
    ),
    // landing rotation
    'drg_landing_rotation' => array(
      'field_name' => 'field_drg_landing_rotation',
      'label' => $t('Landing rotation'),
      'description' => $t('Example : <127,127,127>'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'text_textfield',
        'module' => 'text',
        'settings' => array(
          'size' => 13,
          'max_length' => 13
        )
      ),
      'default_value' => array(
        array(
          'value' => '<0,0,0>'
        )
      )
    ),
  );
}

/**
 * Implements of hook_uninstall().
 */
function d4os_ui_regions_guide_uninstall() {
  $machine_name = 'd4os_ui_regions_guide';
  // gather all nodes created
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => $machine_name));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // delete all the nodes at once
  node_delete_multiple($nids);

  // remove peristant variables that control settings
  variable_del('additional_settings__active_tab_' . $machine_name);
  variable_del('node_preview_' . $machine_name);
  variable_del('node_options_' . $machine_name);
  variable_del('node_submitted_' . $machine_name);
  variable_del('menu_options_' . $machine_name);
  variable_del('menu_parent_' . $machine_name);


  // find all fields and delete them
  foreach (array_keys(_d4os_ui_regions_guide_installed_fields()) as $field) {
    field_delete_field($field);
  }

  // find all fields and delete instance
  $instances = field_info_instances('node', $machine_name);
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // delete our content type
  node_type_delete($machine_name);

  // purge all field information
  field_purge_batch(1000);

  // Remove variables.
  db_query("DELETE FROM {variable} WHERE name LIKE 'd4os_ui_regions_guide%%'");
}
